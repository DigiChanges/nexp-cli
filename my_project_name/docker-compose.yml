version: '3.4'

services:
  node:
    container_name: my_project_name_node_1
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
      target: ${STAGE}
    ports:
      - "8089:8089"
    volumes:
      - .:/usr/app:cached
    networks:
     - my_project_name_net
  db:
    container_name: my_project_name_db_1
    restart: always
    build:
      context: docker/mongo/
      dockerfile: Dockerfile
    ports:
      - "27017:27017"
    networks:
     - my_project_name_net
    environment:
      MONGODB_ROOT_PASSWORD: 123456
      MONGODB_USERNAME: my_project_name
      MONGODB_PASSWORD: my_project_name123
      MONGODB_DATABASE: db_my_project_name
    volumes:
      - data:/bitnami/mongodb   

  mail:
    container_name: my_project_name_mail_1
    restart: always
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"
    networks:
     - my_project_name_net

  minio:
    container_name: my_project_name_minio_1
    restart: always
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
     - my_project_name_net
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: 12345678
      MINIO_DOMAIN: localhost
    volumes:
      - minio:/data
    command: server --address 0.0.0.0:9000 --console-address 0.0.0.0:9001 /data

  redis:
    image: bitnami/redis:latest
    restart: always
    container_name: my_project_name_redis_1
    environment:
      - REDIS_PASSWORD=ewsua132435 # Security reasons
      - DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG # Security reasons
    ports:
      - "6379:6379"
    networks:
     - my_project_name_net
    volumes:
      - redis:/bitnami/redis/data

networks:
  my_project_name_net:
    driver: "bridge"

volumes:
  data:
    driver: "local"
  minio:
    driver: "local"
  redis:
    driver: "local"
