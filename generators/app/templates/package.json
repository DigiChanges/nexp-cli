{
  "name": "<%= projectName %>",
  "version": "0.0.0",
  "description": "",
  "scripts": {
    "build": "npm-run-all clean lint pre-build tsc",
    "pre-check": "yarn ts-check && yarn lint",
    "clean": "rimraf dist/*",
    "ci": "npm run pre-build && npm run ts-check && npm run lint && npm run cpy-ci && npm run command createFolderLogger",
    "ts-check": "tsc -p tsconfig.json --noEmit",
    "command": "npx ts-node src/command.ts",
    "dev": "parcel watch --no-hmr --no-cache --no-autoinstall --log-level \"verbose\"",
    "dev:watch": "yarn pre-build && concurrently \"yarn dev\" \"yarn watch\"",
    "debug": "nodemon --inspect=0.0.0.0:9229 src/index.ts",
    "docker:command": "docker-compose exec node yarn command",
    "lint-fix": "eslint -c .eslintrc.js ./src --fix",
    "lint": "eslint -c .eslintrc.js ./src",
    "cpy-ci": "cp .env.dev .env",
    "pre-build": "cpy --cwd=src --parents '**/*' '!**/*.ts' '../dist/src/'",
    "pre-commit": "lint-staged",
    "start": "node dist/src/index.js",
    "tsc": "tsc",
    "test": "jest --runInBand --coverage",
    "test-watch": "npx jest --watch --silent --coverage=false",
    "watch": "nodemon dist/src/index.js",
    "prepare": "husky install"<% if (orm == 'MikroORM') { %>,
    "sincronize": "npx ts-node src/App/Presentation/Commands/sincronizeMikroORM.ts"<% } %>
  },
  "nodemonConfig": {
    "execMap": {
      "ts": "node --require ts-node/register/transpile-only"
    }
  },
  "targets": {
    "app": {
      "source": "src/index.ts",
      "distDir": "dist/src",
      "outputFormat": "commonjs",
      "engines": {
        "node": ">=12"
      }
    }
  },
  "keywords": [],
  "author": "Digichanges",
  "license": "MIT",
  "dependencies": {
    "@digichanges/shared-experience": "^0.7.1", <% if (http == 'Koa') { %>
    "@koa/multer": "^3.0.0",<% } %><% if (orm == 'MikroORM') { %>
    "@mikro-orm/core": "^5.1.2",
    "@mikro-orm/postgresql": "^5.1.2",<% } %>
    "axios": "^0.21.1",
    "bcrypt": "^5.0.1",
    "bcryptjs": "^2.4.3",
    "catch-decorator": "^2.0.0",
    "child_process": "^1.0.2",
    "class-validator": "^0.13.1",
    "commander": "^5.1.0",
    "compression": "^1.7.4",
    "config": "^3.3.6",
    "cors": "^2.8.5",
    "dotenv": "^8.2.0",
    "envalid": "^7.2.1",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-prefer-arrow": "^1.2.3",<% if (http == 'Express') { %>
    "express": "^4.17.1",<% } %><% if (http == 'Express') { %>
    "express-handlebars": "^5.3.0",<% } %><% if (http == 'Express') { %>
    "express-rate-limit": "^5.2.6",<% } %><% if (http == 'Express') { %>
    "express-throttle": "^2.0.0",<% } %>
    "faker": "^5.5.3",
    "fs-extra": "^8.1.0",
    "handlebars": "^4.7.7",
    "helmet": "^3.23.3",
    "i18n": "^0.13.2",
    "inversify": "^6.0.1",
    "inversify-express-utils": "^6.4.2",
    "inversify-inject-decorators": "^3.1.0",
    "jsonwebtoken": "^8.5.1",
    "jwt-simple": "^0.5.6",<% if (http == 'Koa') { %>
    "koa": "^2.13.1",<% } %><% if (http == 'Koa') { %>
    "koa-bodyparser": "^4.3.0",<% } %><% if (http == 'Koa') { %>
    "koa-cors": "^0.0.16",<% } %><% if (http == 'Koa') { %>
    "koa-hbs": "^0.9.0",<% } %><% if (http == 'Koa') { %>
    "koa-helmet": "^6.1.0",<% } %><% if (http == 'Koa') { %>
    "koa-qs": "^3.0.0",<% } %><% if (http == 'Koa') { %>
    "koa-ratelimit": "^5.0.1",<% } %><% if (http == 'Koa') { %>
    "koa-router": "^10.0.0",<% } %>
    "lodash": "^4.17.21",
    "md5": "^2.3.0",
    "minio": "^7.0.18",
    "moment": "^2.29.1",<% if (orm == 'Mongoose') { %>
    "mongodb": "4.2.2",<% } %><% if (orm == 'Mongoose') { %>
    "mongoose": "^6.1.5",<% } %>
    "multer": "^1.4.3",
    "node-cron": "^3.0.0",
    "node-minio": "^1.0.2",
    "nodemailer": "6.7.2",<% if (orm == 'TypeORM') { %>
    "pg": "^8.7.1",<% } %><% if (orm == 'TypeORM' || orm == 'MikroORM') { %>
    "pg-mem": "^2.2.0",<% } %><% if (orm == 'TypeORM' || orm == 'MikroORM') { %>
    "pg-promise": "^10.11.1",<% } %>
    "promise-events": "^0.2.4",
    "reflect-metadata": "^0.1.13",
    "shelljs": "^0.8.4",
    "tedis": "^0.1.12",
    "ts-mixer": "^6.0.0",
    "tslog": "^3.3.3",<% if (orm == 'TypeORM') { %>
    "typeorm": "^0.3.3",<% } %>
    "uuid": "^8.3.2",
    "web-push": "^3.4.4"
  },
  "devDependencies": {
    "@commitlint/cli": "^13.2.1",
    "@commitlint/config-conventional": "^13.2.0",
    "@parcel/transformer-typescript-tsc": "^2.0.0",
    "@shelf/jest-mongodb": "^2.1.0",
    "@types/bcrypt": "^3.0.1",
    "@types/bcryptjs": "^2.4.2",
    "@types/bson": "^4.2.0",
    "@types/compression": "^1.7.0",
    "@types/config": "^0.0.38",
    "@types/cors": "^2.8.10",
    "@types/dotenv": "^8.2.0",<% if (http == 'Express') { %>
    "@types/express": "^4.17.11",<% } %><% if (http == 'Express') { %>
    "@types/express-handlebars": "^3.1.0",<% } %><% if (http == 'Express') { %>
    "@types/express-rate-limit": "^5.1.1",<% } %><% if (http == 'Express') { %>
    "@types/faker": "^5.5.3",<% } %>
    "@types/fs-extra": "^8.1.1",
    "@types/helmet": "^0.0.48",
    "@types/i18n": "^0.13.0",
    "@types/inversify-inject-decorators": "^2.0.0",
    "@types/jest": "^27.0.2",
    "@types/jwt-simple": "^0.5.33",<% if (http == 'Koa') { %>
    "@types/koa": "^2.13.3",<% } %><% if (http == 'Koa') { %>
    "@types/koa-bodyparser": "^4.3.1",<% } %><% if (http == 'Koa') { %>
    "@types/koa-cors": "^0.0.2",<% } %><% if (http == 'Koa') { %>
    "@types/koa-hbs": "^1.0.7",<% } %><% if (http == 'Koa') { %>
    "@types/koa-ratelimit": "^4.2.3",<% } %><% if (http == 'Koa') { %>
    "@types/koa-router": "^7.4.2",<% } %><% if (http == 'Koa') { %>
    "@types/koa__multer": "^2.0.3",<% } %>
    "@types/lodash": "^4.14.181",
    "@types/md5": "^2.3.0",
    "@types/minio": "^7.0.7",<% if (orm == 'Mongoose') { %>
    "@types/mongodb": "^4.0.7",<% } %><% if (orm == 'Mongoose') { %>
    "@types/mongoose": "^5.11.97",<% } %><% if (orm == 'Mongoose') { %>
    "@types/multer": "^1.4.5",<% } %>
    "@types/node-cron": "^3.0.0",
    "@types/nodemailer": "^6.4.1",<% if (orm == 'TypemORM' || orm == 'MikroORM') { %>
    "@types/pg": "^8.6.1",<% } %>
    "@types/shelljs": "^0.8.8",
    "@types/supertest": "^2.0.11",
    "@types/uuid": "^8.3.0",
    "@types/validator": "^13.7.0",
    "@types/web-push": "^3.3.0",
    "@typescript-eslint/eslint-plugin": "^4.33.0",
    "@typescript-eslint/parser": "^4.33.0",
    "concurrently": "^6.3.0",
    "cpy-cli": "^3.1.1",
    "eslint": "^7.32.0",
    "husky": "^7.0.4",
    "jest": "^27.4.5",
    "lint-staged": "^11.2.6",
    "nodemon": "^2.0.7",
    "npm-run-all": "^4.1.5",
    "parcel": "^2.0.1",
    "prettier": "^2.2.1",
    "rimraf": "^3.0.2",
    "supertest": "^6.1.3",
    "ts-jest": "^27.0.7",
    "ts-node": "^8.9.1",
    "typescript": "^4.4.4"
  },
  "engines": {
    "yarn": "^1.*"
  }
}
