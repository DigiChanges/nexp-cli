version: '3.4'

services:
  node:
    container_name: <%= projectName %>_node_1
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    working_dir: /home/node/app
    volumes:
     - .:/home/node/app:cached
    ports:
      - "8089:8089"
    networks:
     - <%= projectName %>net

  db:
    container_name: <%= projectName %>_db_1
    restart: always <% if (orm == 'Mongoose') { %>
    build:
      context: docker/mongo/
      dockerfile: Dockerfile <% } %><% if (orm == 'TypeORM' || orm == 'MikroORM') { %>
    build:
      context: docker/postgres/
      dockerfile: Dockerfile <% } %> <% if (orm == 'Mongoose') { %>
    ports:
      - "27017:27017" <% } %><% if (orm == 'TypeORM' || orm == 'MikroORM') { %>
    ports:
      - "5433:5432" <% } %>
    networks:
     - <%= projectName %>net <% if (orm == 'Mongoose') { %>
    environment:
      MONGODB_ROOT_PASSWORD: 123456
      MONGODB_USERNAME: <%= projectName %>
      MONGODB_PASSWORD: <%= projectName %>
      MONGODB_DATABASE: <%= projectName %> <% } %> <% if (orm == 'TypeORM' || orm == 'MikroORM') { %>
    environment:
      POSTGRES_USER: <%= projectName %>
      POSTGRES_DB: <%= projectName %>
      POSTGRES_PASSWORD: <%= projectName %> <% } %> <% if (orm == 'TypeORM' || orm == 'MikroORM') { %>
    volumes:
      - data:/var/lib/postgresql/data <% } %> <% if (orm == 'Mongoose') { %>
    volumes:
      - data:/bitnami/mongodb <% } %>

  mail:
    container_name: <%= projectName %>_mail_1
    restart: always
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"
    networks:
     - "<%= projectName %>net" <% if (fileDomain) { %>

  minio:
    container_name: <%= projectName %>_minio_1
    restart: always
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
     - "<%= projectName %>net"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: 12345678
      MINIO_DOMAIN: localhost
    volumes:
      - minio:/data
    command: server --address 0.0.0.0:9000 --console-address 0.0.0.0:9001 /data <% } %>

  redis:
    image: bitnami/redis:latest
    restart: always
    container_name: <%= projectName %>_redis_1
    environment:
      - REDIS_PASSWORD=ewsua132435 # Security reasons
      - DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG # Security reasons
    ports:
      - "6379:6379"
    networks:
     - "<%= projectName %>net"
    volumes:
      - redis:/bitnami/redis/data

networks:
  <%= projectName %>net:
    driver: "bridge"

volumes:
  data:
    driver: "local"
  minio:
    driver: "local"
  redis:
    driver: "local"
